<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Stéphane's Blog</title><link>https://blog.deraco.fr/en/post/</link><description>Recent content in Posts on Stéphane's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 18 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.deraco.fr/en/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Temperature and humidity graph with a Raspberry Pi and a DHT22 sensor</title><link>https://blog.deraco.fr/en/post/2022-08-18-rpi-dht22/</link><pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate><guid>https://blog.deraco.fr/en/post/2022-08-18-rpi-dht22/</guid><description>DHT22 is a small temperature and humidity sensor, easy to use. We can use a Raspberry Pi to communicate with it, and make graphs of temperature and humidity evolution.
Material We need:
a Raspberry Pi (here the 3B+ version) a good quality SD card (class 10) a power supply for the Raspberry (5V between 2.5A and 3A) the DHT22 sensor a 10 kΩ resistor a breadboard another computer to connect to the RPi using SSH an RJ45 cable RPi installation SD card preparation The easiest way to install the RPi OS is to use the Raspberry Pi Imager software, which allows you to choose the right version of the OS, download it and install it on the SD card.</description></item><item><title>Wifi signal strength detector</title><link>https://blog.deraco.fr/en/post/2021-09-19-wifi-signal-detector/</link><pubDate>Sun, 19 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.deraco.fr/en/post/2021-09-19-wifi-signal-detector/</guid><description>In a previous Devoxx France conference, Clever-Cloud had a booth where they showed how to use their platform with a small chip that controlled a LED strip, all that communicating through a websocket making the interface with the backend hosted on Clever-Cloud.
This project is on Github : https://github.com/CleverCloud/wemos-statsd-example.
The cool part is that the LED strip and the chip were distributed as goodies :)
I recently found this LED strip in a box, and I wanted to play with it.</description></item><item><title>Improve blog with tags, table of content, RSS, ...</title><link>https://blog.deraco.fr/en/post/2021-06-26-blog-improvements/</link><pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate><guid>https://blog.deraco.fr/en/post/2021-06-26-blog-improvements/</guid><description>The two previous blog posts where about the set up of the blog. Now, I&amp;rsquo;ll add several small (or not) details, such as tags, legal pages, images, table of content, &amp;hellip;
File organization I first started by creating Markdown files directly in the content/{en,fr}/post/ directory. But while writing this post, I needed to add images.
The default place for site images is in the static/ directory (in which I created the images/ sub-directory).</description></item><item><title>How to create a multilingual site with Hugo</title><link>https://blog.deraco.fr/en/post/2021-06-12-create-a-multilingual-site-with-hugo/</link><pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate><guid>https://blog.deraco.fr/en/post/2021-06-12-create-a-multilingual-site-with-hugo/</guid><description>With Hugo, we can create a multilingual site.
Configuration We first have to write in the config file what are the supported languages:
config.yaml
languages: en: title: Stéphane&amp;#39;s Blog fr: title: Blog de Stéphane We can add a params block for each language to override some specific values depending on the language, for example labels or urls.
Please note that the default language will be the one defined in the defaultContentLanguage parameter.</description></item><item><title>Create a blog with Hugo</title><link>https://blog.deraco.fr/en/post/2021-04-11-create-a-blog-with-hugo/</link><pubDate>Sat, 10 Apr 2021 14:54:31 +0200</pubDate><guid>https://blog.deraco.fr/en/post/2021-04-11-create-a-blog-with-hugo/</guid><description>Unsurprisingly, the first post of this blog explains how it is built and hosted.
Blog engine choice This blog is static, meaning it does not need a content management system such as Wordpress, Drupal or others.
On the contrary, all pages are generated upstream in HTML/CSS/JS, and are served statically. The tool that does all that (and more) is Hugo.
Hugo takes in input Markdown files, and generates the corresponding HTML.</description></item></channel></rss>